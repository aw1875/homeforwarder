name: Build and Release
on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [amd64, arm64]
        zig: [0.13.0]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: ${{ matrix.zig }}

      - name: Setup Variables
        id: vars
        run: |
          VERSION=$(grep '.version' build.zig.zon | sed 's/.*= "\(.*\)",/\1/')
          APP_NAME=$(grep '.name' build.zig.zon | sed 's/.*= "\(.*\)",/\1/')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "APP_NAME=$APP_NAME" >> $GITHUB_OUTPUT
          echo "DEB_FILENAME=${APP_NAME}_${VERSION}_${{ matrix.architecture }}.deb" >> $GITHUB_OUTPUT

      - name: Build project
        run: ./scripts/build.sh ${{ matrix.architecture }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ steps.vars.outputs.DEB_FILENAME }}
          path: debs/${{ steps.vars.outputs.DEB_FILENAME }}

    outputs:
      version: ${{ steps.vars.outputs.VERSION }}
      app_name: ${{ steps.vars.outputs.APP_NAME }}
      deb_filename: ${{ steps.vars.outputs.DEB_FILENAME }}

  release:
    needs: build
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Setup paths and variables
        id: setup
        run: |
          mkdir -p ~/debs
          echo "AMD_DEB_FILENAME=${{ needs.build.outputs.app_name }}_${{ needs.build.outputs.version }}_amd64.deb" >> $GITHUB_OUTPUT
          echo "ARM_DEB_FILENAME=${{ needs.build.outputs.app_name }}_${{ needs.build.outputs.version }}_arm64.deb" >> $GITHUB_OUTPUT

      - name: Download AMD Artifact
        uses: actions/download-artifact@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ steps.setup.outputs.AMD_DEB_FILENAME }}
          path: ~/debs

      - name: Generate AMD SHA256 Checksum
        id: sha256_amd
        run: |
          cd ~/debs
          sha256sum ${{ steps.setup.outputs.AMD_DEB_FILENAME }} > ${{ steps.setup.outputs.AMD_DEB_FILENAME }}.sha256
          echo "SHA256=$(cat ${{ steps.setup.outputs.AMD_DEB_FILENAME }}.sha256)" >> $GITHUB_OUTPUT

      - name: Download ARM Artifact
        uses: actions/download-artifact@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ steps.setup.outputs.ARM_DEB_FILENAME }}
          path: ~/debs

      - name: Generate ARM SHA256 Checksum
        id: sha256_arm
        run: |
          cd ~/debs
          sha256sum ${{ steps.setup.outputs.ARM_DEB_FILENAME }} > ${{ steps.setup.outputs.ARM_DEB_FILENAME }}.sha256
          echo "SHA256=$(cat ${{ steps.setup.outputs.ARM_DEB_FILENAME }}.sha256)" >> $GITHUB_OUTPUT

      - name: Move artifacts
        run: |
          mv ~/debs release

      - name: Publish Release
        uses: softprops/action-gh-release@v2
        with:
          files: release/*
          name: ${{ needs.build.outputs.app_name }} v${{ needs.build.outputs.version }}
          tag_name: v${{ needs.build.outputs.version }}
          body: |
            ### SHA256 Checksums
            ```
            ${{ steps.sha256_amd.outputs.SHA256 }}
            ${{ steps.sha256_arm.outputs.SHA256 }}
            ```
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
